@function flexy-get-breakpoint($breakpoint) {
  @if (map-has-key($flexy-breakpoints, $breakpoint)) {
    @return map-get($flexy-breakpoints, $breakpoint);
  } @else {
    @warn "#{$breakpoint} is not a set breakpoint variable";
    @return null;
  }
}

@function flexy-media-map($map) {
  $temp: ();
  @each $key, $value in $map {
    $temp: append($temp, '(#{$key}: #{$value})');
  }
  @return flexy-join(flexy-reverse($temp), ' and ');
}

@mixin flexy-media($map, $media: 'only screen') {
  @media #{$media} and #{flexy-media-map($map)} {
    @content;
  }
}

@mixin flexy-breakpoint($breakpoint, $media: 'only screen') {
  @if map-has-key($flexy-breakpoints, $breakpoint) {
    $minWidth: map-get($flexy-breakpoints, $breakpoint);
    @media #{$media} and (min-width: #{$minWidth}) {
      @content;
    }
  } @else {
    @warn "#{$breakpoint} is not a set breakpoint variable";
  }
}

@mixin flexy-breakpoint-limit($breakpoint, $limit: null, $media: 'only screen') {
  @if map-has-key($flexy-breakpoints, $breakpoint) {
    $list: ();

    $list: append($list, $media);

    $minWidth: map-get($flexy-breakpoints, $breakpoint);
    $list: append($list, '(min-width: #{$minWidth})');

    @if ($limit and map-has-key($flexy-breakpoints, $limit)) {
      $maxWidth: flexy-get-breakpoint($limit) - 0.1px;
      $list: append($list, '(max-width: #{$maxWidth})');
    }

    @media #{flexy-join($list, ' and ')} {
      @content;
    }
  } @else {
    @warn "#{$breakpoint} is not a set breakpoint variable";
  }
}
